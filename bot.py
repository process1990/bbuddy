#D2Buddy
TELEGRAM_API_TOKEN = '6034407389:AAENp7_dSV8elFvTlVAm0UJjnh91PKezQGs'
FEEDBACK_CHAT_ID = 'FEEDBACK_CHAT_ID'

import telebot
from telebot import types
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
import logging
from collections import defaultdict

from google.cloud import vision
from google.oauth2 import service_account
import requests
import os
import logging
import csv

logging.basicConfig(level=logging.DEBUG)

nltk.download('stopwords')
nltk.download('punkt')

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "liquid-anchor-383805-da17f74a4cfb.json"

stop_words = set(stopwords.words('russian'))
user_states = {}
ratingMenu = ["üëéüèª –ü–ª–æ—Ö–æ–π –æ—Ç–≤–µ—Ç", "üëçüèª –≠—Ç–æ —Ç–æ, —á—Ç–æ —è –∏—Å–∫–∞–ª!"]

credentials = service_account.Credentials.from_service_account_file('liquid-anchor-383805-da17f74a4cfb.json')
vision_client = vision.ImageAnnotatorClient(credentials=credentials)

# –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = telebot.TeleBot(TELEGRAM_API_TOKEN)

DOCUMENTATION = {"–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á PayControl –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?": "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∫–ª—é—á–∞ PayControl, –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –±–∞–Ω–∫ —Å –ø—Ä–æ—Å—å–±–æ–π –æ –≤—ã–ø—É—Å–∫–µ –∫–ª—é—á–∞ PayControl.",
"–ì–¥–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –∫–ª—é—á PayControl –ø–æ—Å–ª–µ –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤ –±–∞–Ω–∫–µ?": """–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –±–∞–Ω–∫ –≤—ã–ø—É—Å—Ç–∏—Ç –¥–ª—è –≤–∞—Å –∫–ª—é—á PayControl –∏ –∑–∞–≤–µ–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ
—Å—Ä–µ–¥—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–∏, –¥–∞–Ω–Ω—ã–π –∫–ª—é—á –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∫–ª—é—á–µ–π PayControl, –¥–æ—Å—Ç—É–ø–Ω–æ–º
–≤ —Ä–∞–∑–¥–µ–ª–µ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí PayControl ‚Üí –ö–ª—é—á–∏)""",
"–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á PayControl –Ω–∞ —Å–≤–æ–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ?": "–ï—Å–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª—é—á–∞ –±—ã–ª –≤—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–ª—é—á–∞ —Ä–∞–∑–¥–µ–ª—å–Ω–æ –¥–≤—É–º—è —á–∞—Å—Ç—è–º–∏, –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR-–∫–æ–¥–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å –∫–ª—é—á–∞ ‚Äì –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.",
"–ø—Ä–æ–¥–ª–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–∞ PayControl?": "–ö–ª—é—á–∏ PayControl, –∫–∞–∫ –∏ –ª—é–±–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–∏, –∏–º–µ—é—Ç —Å–≤–æ–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è. –î–ª—è –µ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –±–∞–Ω–∫ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–∞ PayControl",
"–Ω–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π PayControl?" :"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ø–∏—Å–∫—É –∑–∞—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí PayControl ‚Üí –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π).",
"—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞, –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –±–µ–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞": "–§–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞, –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –±–µ–∑ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ (–∫ –ø—Ä–∏–º–µ—Ä—É, –≥–µ–Ω. –¥–∏—Ä–µ–∫—Ç–æ—Ä —é—Ä. –ª–∏—Ü–∞), –∏–º–µ—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã, –≤—ã–¥–∞–Ω–Ω—ã–µ –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ.",
"–æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏?": "–ù–∞ –≥–ª–∞–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã ‚Üí –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã",
"–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É?": "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∑–∞–ø–∏—Å—å –≤ —Å–ø–∏—Å–∫–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–≤–æ–π–Ω–æ–π —â–µ–ª—á–æ–∫ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏.",
"—Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∑—ã–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞": """–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–∑—ã–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
–û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ—Ñ–∏–ª—è, –Ω–∞–∂–∞–≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
–ù–∞ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã ‚Üí –ó–∞–ø—Ä–æ—Å—ã
–í –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:
–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É + —Å–ø—Ä–∞–≤–∞.""",
# old texts
    "–æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ø—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤?": """–í—ã–±–µ—Ä–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª –î–µ–ø–æ–∑–∏—Ç—ã.
–ë—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –ú–æ–∏ –ø—Ä–æ–¥—É–∫—Ç—ã ‚Üí –¢–µ–∫—É—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ (—Å–º. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ (–≤–∫–ª–∞–¥–∫–∞ –ú–æ–∏ –ø—Ä–æ–¥—É–∫—Ç—ã)).
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–¥–ª–∏—Ç—å, –∏ –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ü—Ä–æ–ª–æ–Ω–≥–∏—Ä–æ–≤–∞—Ç—å.
–ë—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ —ç–∫—Ä–∞–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –ü—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞.""",

    "–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—á–∞—Ç–Ω—É—é —Ñ–æ—Ä–º—É –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ –≤—ã–¥–∞—á—É —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –∫—Ä–µ–¥–∏—Ç—É?": """–î–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–µ—á–∞—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã / –ø–µ—á–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü—Ä–æ—Å–º–æ—Ç—Ä. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è / —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.""",

    "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –∑–∞–ø–∏—Å—è—Ö –ø–æ —Å–¥–µ–ª–∫–∞–º –Ω–∞ —É—á–µ—Ç–µ –≤ –±–∞–Ω–∫–µ?": "–ó–∞–ø–∏—Å–∏ –ø–æ —Å–¥–µ–ª–∫–∞–º, –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –Ω–∞ —É—á—ë—Ç –≤ –±–∞–Ω–∫–µ, —Å–æ–¥–µ—Ä–∂–∞—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –¥–∞–Ω–Ω—ã–º —Å–¥–µ–ª–∫–∞–º ‚Äì –Ω–æ–º–µ—Ä–∞ –£–ù–ö, —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–æ—Å–Ω–æ–≤—ã–≤–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å—É–º–º—ã –∏ –¥–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.",

    "—Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∫–ª–∞–¥–∫–∞ –ü–ª–∞—Ç–µ–∂–∏ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Å–¥–µ–ª–∫–∏ –Ω–∞ —É—á–µ—Ç–µ –≤ –±–∞–Ω–∫–µ?": "–í–∫–ª–∞–¥–∫–∞ –ü–ª–∞—Ç–µ–∂–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç ‚Äì –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö-–ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞—Ö ‚Äì —Å–ø–∏—Å–∫–∏ –ø–ª–∞—Ç—ë–∂–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (—Ä—É–±–ª—ë–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π, –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ —Å–ø–∏—Å–∞–Ω–∏–π —Å —Ç—Ä–∞–Ω–∑–∏—Ç–Ω—ã—Ö —Å—á–µ—Ç–æ–≤), —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–¥–µ–ª–∫–æ–π.",

    "–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ –ø—Ä–∏ –ø—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–∞?": """–ï—Å–ª–∏ –Ω–∞ —Ñ–æ—Ä–º–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞:
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.
–ë—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –§–ò–û –∏ –¢–µ–ª–µ—Ñ–æ–Ω (—Å–º. –§–æ—Ä–º–∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏).
–£–∫–∞–∂–∏—Ç–µ –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—è—Ö, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –§–ò–û –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞."""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(filename='bot_errors.log', level=logging.ERROR)

def find_best_match(query, documents):
    stop_words = set(stopwords.words('russian'))
    query_words = word_tokenize(query)

    filtered_query = [w.lower() for w in query_words if w.lower() not in stop_words]

    best_score = 5
    best_match = None

    for key, value in documents.items():
        value_words = word_tokenize(value)
        filtered_value = [w.lower() for w in value_words if w.lower() not in stop_words]

        score = 0
        for word in filtered_query:
            score += filtered_value.count(word)

        if score > best_score:
            print(f"score: {score}, best_score: {best_score}")
            best_score = score
            best_match = (key, value)
    return best_match

def get_response(query):
    response = find_best_match(query, DOCUMENTATION)
    if response:
        return response[1]
    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É."

def send_keyboard(chat_id):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    search_button = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    help_button = types.KeyboardButton("‚Ñπ –ü–æ–º–æ—â—å")
    feedback_button = types.KeyboardButton("üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    keyboard.add(search_button)
    keyboard.add(help_button, feedback_button)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@bot.message_handler(commands=['start'])
def start(message):
    try:
        start_text = '''
        ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Bbuddy, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏. –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π ‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å.
        '''
        bot.send_message(message.chat.id, start_text)
        send_keyboard(message.chat.id)
    except requests.exceptions.RequestException as e:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º API. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        logging.error(f"–û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda message: message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
def search(message):
    try:
        search_text = '''
üîç –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ù–∞–ø—Ä–∏–º–µ—Ä:
<b>–ö–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ü—Ä–æ–ª–æ–Ω–≥–∞—Ü–∏—è –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤?</b>
        '''
        bot.send_message(message.chat.id, search_text, parse_mode="HTML")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda message: message.text == "‚Ñπ –ü–æ–º–æ—â—å")
def help_text(message):
    help_text = '''
üöÄ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏. –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–π:

/start - –Ω–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º

‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ —á–∞—Ç–µ, –∏ —è –Ω–∞–π–¥—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å.

‚Ñπ –ü–æ–º–æ—â—å - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–π

üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å - –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞
    –ù–∞–ø–∏—à–∏—Ç–µ "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–∑—ã–≤–æ–º –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º.
    '''
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(func=lambda message: message.text == "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
def handle_feedback(message):
    user_id = message.from_user.id
    user_states[user_id] = 'waiting_for_feedback'
    msg = bot.send_message(message.chat.id, "üìù –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    bot.register_next_step_handler(msg, send_feedback)
        
def send_feedback(message):
    user_id = message.from_user.id
    if user_states[user_id] == 'waiting_for_feedback':
        try:
            user_states[user_id] = ''
            feedback_text = f"{message.text}"
            save_feedback_to_file(message.from_user.username, feedback_text) # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
            bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üòä")
            send_keyboard(message.chat.id)
        except Exception as e:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            logging.error(f"–û—à–∏–±–∫–∞: {e}")
            send_keyboard(message.chat.id)

def send_rating_menu(chat_id):
    rating_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bad_rating_button = types.KeyboardButton(ratingMenu[0])
    good_rating_button = types.KeyboardButton(ratingMenu[1])
    rating_keyboard.add(bad_rating_button, good_rating_button)
    bot.send_message(chat_id, "–û—Ü–µ–Ω–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –º–æ—é —Ä–∞–±–æ—Ç—É.", reply_markup=rating_keyboard)

@bot.message_handler(func=lambda message: message.text in ratingMenu)
def handle_rating(message):
    if message.text == ratingMenu[0]:
        bot.send_message(message.chat.id, "üòî –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É. –ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ–∏—Å–∫–∞.")
        save_bad_answer(message.from_user.username, message.text) # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
    elif message.text == ratingMenu[1]:
        bot.send_message(message.chat.id, "üòÑ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Å–º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º.")
    send_keyboard(message.chat.id)

# Modify the handle_text_message function
@bot.message_handler(func=lambda message: True)
def handle_text_message(message):
    try:
        query = message.text
        response = get_response(query)
        if response:
            bot.send_message(message.chat.id, response)
            send_rating_menu(message.chat.id) # Add this line
        else:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–Ω–ª–∞–π–Ω-–ø–æ–∏—Å–∫–æ–º.")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞: {e}")

# PHOTO VISION
@bot.message_handler(content_types=['photo'])
def handle_image(message):
    try:
        image_id = message.photo[-1].file_id
        image_url = bot.get_file_url(image_id)
        image_bytes = download_image(image_url)
        if image_bytes:
            recognized_text = recognize_text_with_google_vision(image_bytes)
            if recognized_text:
                response = get_response(recognized_text)
                bot.send_message(message.chat.id, response)
            else:
                bot.send_message(message.chat.id, "–ù–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–µ –±—ã–ª —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω —Ç–µ–∫—Å—Ç.")
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    except Exception as e:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞: {e}")
        print(f"–û—à–∏–±–∫–∞: {e}")

def download_image(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.content
    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None
        
def recognize_text_with_google_vision(image_bytes):
    client = vision.ImageAnnotatorClient()
    image = vision.Image(content=image_bytes)

    response = client.text_detection(image=image)
    texts = response.text_annotations

    if texts:
        return texts[0].description
    else:
        return ""

def save_feedback_to_file(username, feedback):
    file_name = "feedback.csv"
    file_exists = os.path.isfile(file_name)

    with open(file_name, "a", newline="", encoding="utf-8") as file:
        fieldnames = ["Username", "Feedback"]
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        
        if not file_exists:
            writer.writeheader()

        writer.writerow({"Username": username, "Feedback": feedback})

def save_bad_answer(username, question):
    file_name = "bad_answers.csv"
    file_exists = os.path.isfile(file_name)

    with open(file_name, "a", newline="", encoding="utf-8") as file:
        fieldnames = ["Username", "Question"]
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        
        if not file_exists:
            writer.writeheader()

        writer.writerow({"Username": username, "Question": question})

if __name__ == "__main__":
    bot.polling(none_stop=True)
